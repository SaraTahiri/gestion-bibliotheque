package model;

import java.util.ArrayList;
import java.util.List;
import java.io.*;
import java.util.*;
import exceptions.*;

public class RetourModel implements RetourModelInterface {

    private List<Retour> retours = new ArrayList<>();
    private String csvFileName ; 

    // Constructeur
    public RetourModel(String csvFileName) {
        this.csvFileName= csvFileName;
    }

    // Ajouter un retour
    public void ajouterRetour(Retour retour) {
        retours.add(retour);
    }

    // Mettre à jour un retour
    public void mettreAJourRetour(String idEmprunt, String dateRetourEffective) {
        for (Retour retour : retours) {
            if (retour.getIdEmprunt()==idEmprunt) {
                retour.setDateRetourEffective(dateRetourEffective);
                break;
            }
        }
    }

    // Obtenir tous les retours
    public List<Retour> getRetours() {
        return retours;
    }

    // Obtenir les retours non retournés (dateRetourEffective vide)
    public List<Retour> getRetoursNonRetournes() {
        List<Retour> nonRetournes = new ArrayList<>();
        for (Retour retour : retours) {
            if (retour.getDateRetourEffective() == null || retour.getDateRetourEffective().isEmpty()) {
                nonRetournes.add(retour);
            }
        }
        return nonRetournes;
    }
    @Override
    public void sauvegarderCSV() {
        try (BufferedWriter bw = new BufferedWriter(new FileWriter(csvFileName))) {
            // Écrire l'en-tête
            bw.write("idEmprunt;idUtilisateur;nomUtilisateur;emailUtilisateur;idLivre;titreLivre;dateEmprunt;dateRetourPrevue;dateRetourEffective");
            bw.newLine();

            // Parcourir les retours et écrire chaque ligne
            for (Retour retour : retours) {
                bw.write(retour.getIdEmprunt() + ";" +
                         retour.getUtilisateur().getId() + ";" +
                         retour.getUtilisateur().getNom() + ";" +
                         retour.getUtilisateur().getEmail() + ";" +
                         retour.getLivre().getId() + ";" +
                         retour.getLivre().getTitre() + ";" +
                         retour.getDateEmprunt() + ";" +
                         retour.getDateRetourPrevue() + ";" +
                         retour.getDateRetourEffective());
                bw.newLine();
            }
        } catch (IOException e) {
            System.err.println("Erreur lors de la sauvegarde du fichier CSV : " + e.getMessage());
        }
    }
    public void lireCSV() {
        retours.clear();  // Vider la liste des retours avant de la remplir
        try (BufferedReader br = new BufferedReader(new FileReader(csvFileName))) {
            br.readLine();  // Lire la ligne d'en-tête du CSV
            String line;
            while ((line = br.readLine()) != null) {
                String[] words = line.split(";");
                if (words.length < 7) continue;  // Ignorer les lignes qui n'ont pas le bon nombre de colonnes

                // Récupérer les valeurs depuis le CSV
                int idEmprunt = words[0];
                int idUtilisateur = words[1];
                String nomUtilisateur = words[2];
                String emailUtilisateur = words[3];
                int  idLivre = words[4];
                String titreLivre = words[5];
                String dateEmprunt = words[6];
                String dateRetourPrevue = words[7];
                String dateRetourEffective = words[8];

                // Créer un Utilisateur avec les informations du CSV
                Utilisateur utilisateur = new Utilisateur(idUtilisateur, nomUtilisateur, emailUtilisateur, "motDePasse", "Membre");

                // Créer un Livre avec les informations du CSV
                Livre livre = new Livre(idLivre, titreLivre, "Auteur du livre", "Genre");

                // Créer un objet Retour avec les données lues
                Retour retour = new Retour(idEmprunt, utilisateur, livre, dateEmprunt, dateRetourPrevue, dateRetourEffective);

                // Ajouter le retour à la liste
                retours.add(retour);
            }
        } catch (IOException e) {
            System.err.println("Erreur lors de la lecture du fichier CSV : " + e.getMessage());
        }
    }

    public List<Retour> getRetours1() {
        return new ArrayList<>(retours);
    }

	
    }
    
	
